/**
 * NGDL API
 *  This is the API document for the NGDL project. It is a work in progress and is subject to change. This documentation is provided for the purpose of testing and auditing the integrity of the platform. It is not intended for production use.<br/><br/> The API is currently in version <b>1.0.0</b>.<br/> Developed by: <b>The Boolean Technology Ltd.</b><br/> Developed for: <b>Nehemiah Grace Developer Limited</b><br/> 
 *
 * The version of the OpenAPI document: v1
 * Contact: tobisholanke@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NgdlApi);
  }
}(this, function(expect, NgdlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NgdlApi.BudgetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BudgetsApi', function() {
    describe('budgetsCreate', function() {
      it('should call budgetsCreate successfully', function(done) {
        //uncomment below and update the code to test budgetsCreate
        //instance.budgetsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsDelete', function() {
      it('should call budgetsDelete successfully', function(done) {
        //uncomment below and update the code to test budgetsDelete
        //instance.budgetsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsGetTransactions', function() {
      it('should call budgetsGetTransactions successfully', function(done) {
        //uncomment below and update the code to test budgetsGetTransactions
        //instance.budgetsGetTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsList', function() {
      it('should call budgetsList successfully', function(done) {
        //uncomment below and update the code to test budgetsList
        //instance.budgetsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsPartialUpdate', function() {
      it('should call budgetsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test budgetsPartialUpdate
        //instance.budgetsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsRead', function() {
      it('should call budgetsRead successfully', function(done) {
        //uncomment below and update the code to test budgetsRead
        //instance.budgetsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('budgetsUpdate', function() {
      it('should call budgetsUpdate successfully', function(done) {
        //uncomment below and update the code to test budgetsUpdate
        //instance.budgetsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
